---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';
import { type DefaultTFuncReturn } from 'i18next';

interface Item {
  title: string;
  description?: string | null;
  icon?: string;
}

export interface Props {
  title?: string | DefaultTFuncReturn;
  items: Array<Item>;
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  items = [],
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="py-16 md:py-20 scroll-mt-16" id="steps">
  <div class="flex flex-col md:flex-row mx-auto max-w-6xl p-4 md:px-8">
    <div class="basis-1/2 py-4 px-2 md:px-6">
      {
        title && (
          <h2
            class="mb-8 text-2xl md:text-3xl lg:text-4xl font-bold font-heading"
            set:html={title}
          />
        )
      }
      {
        items &&
          items.length &&
          items.map(({ title, description, icon }, index) => (
            <div class="flex">
              <div class="flex flex-col items-center mr-2 md:mr-4">
                <div>
                  {index !== items.length - 1 ? (
                    <div class="flex items-center justify-center w-10 h-10 rounded-full border-brand-light dark:border-brand-dark border-2">
                      {icon && (
                        <Icon
                          name={icon}
                          class="w-6 h-6 text-brand-light dark:text-slate-200"
                        />
                      )}
                    </div>
                  ) : (
                    <div class="flex items-center justify-center w-10 h-10 rounded-full border-brand-light border-2 bg-brand-light dark:bg-brand-dark dark:border-brand-dark">
                      <Icon
                        name={icon}
                        class="w-6 h-6 text-white dark:text-slate-200"
                      />
                    </div>
                  )}
                </div>
                <div class="w-px h-full bg-gray-300 dark:bg-slate-500" />
              </div>
              <div class={`pt-1 ${index !== items.length - 1 ? 'pb-8' : ''}`}>
                {title && (
                  <p
                    class="mb-2 text-xl font-bold text-gray-900 dark:text-slate-300"
                    set:html={title}
                  />
                )}
                {description && (
                  <p
                    class="text-gray-600 dark:text-slate-400"
                    set:html={description}
                  />
                )}
              </div>
            </div>
          ))
      }
    </div>
    <div class="basis-1/2 py-4 px-2 md:px-6">
      {
        image &&
          (typeof image === 'string' ? (
            <Fragment set:html={image} />
          ) : (
            <Picture
              class="mx-auto w-full rounded-lg bg-gray-500 shadow-lg"
              width={500}
              height={500}
              widths={[400, 768]}
              sizes="(max-width: 768px) 100vw, 432px"
              aspectRatio="500:500"
              {...image}
            />
          ))
      }
    </div>
  </div>
</section>
